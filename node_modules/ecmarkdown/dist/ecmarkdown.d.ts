export type { OpaqueTagNode, TagNode, CommentNode, AlgorithmNode, TextNode, StarNode, UnderscoreNode, TickNode, TildeNode, PipeNode, FragmentNode, FormatNode, UnorderedListNode, OrderedListNode, ListNode, UnorderedListItemNode, OrderedListItemNode, Node, } from './node-types';
export type { Observer } from './visitor';
import { Parser } from './parser';
import { visit } from './visitor';
import { Emitter } from './emitter';
declare let parseFragment: typeof Parser.parseFragment;
declare let parseAlgorithm: typeof Parser.parseAlgorithm;
declare let emit: typeof Emitter.emit;
declare let fragment: (str: string) => string;
declare let algorithm: (str: string) => string;
export { parseFragment, parseAlgorithm, visit, emit, fragment, algorithm };
