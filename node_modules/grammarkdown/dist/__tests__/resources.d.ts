/*!
 * Copyright (c) 2020 Ron Buckton (rbuckton@chronicles.org)
 *
 * This file is licensed to you under the terms of the MIT License, found in the LICENSE file
 * in the root of this repository or package.
 */
import { Cancelable } from "@esfx/cancelable";
import { NodeAsyncHost, NodeAsyncHostOptions } from "../hosts/node";
export interface TestFile {
    readonly basename: string;
    readonly path: string;
    readonly relative: string;
    readonly content: string;
    readonly options: Readonly<Record<string, string>>;
}
export declare class TestFileHost extends NodeAsyncHost {
    private file;
    constructor(file: TestFile, options?: NodeAsyncHostOptions);
    isTestFile(file: string): boolean;
    normalizeFile(file: string): string;
    resolveFile(file: string, referer?: string): string;
    readFile(file: string, cancelable?: Cancelable): Promise<string | undefined>;
}
export declare function getGrammarFiles(): ReadonlyArray<TestFile>;
