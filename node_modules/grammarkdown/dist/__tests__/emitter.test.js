"use strict";
/*!
 * Copyright (c) 2020 Ron Buckton (rbuckton@chronicles.org)
 *
 * This file is licensed to you under the terms of the MIT License, found in the LICENSE file
 * in the root of this repository or package.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const async_canceltoken_1 = require("@esfx/async-canceltoken");
const grammar_1 = require("../grammar");
const host_1 = require("../host");
describe("Emitter", () => {
    it("cancelable", async () => {
        const cts = async_canceltoken_1.CancelToken.source();
        const grammar = new grammar_1.Grammar(["cancelable.grammar"], {}, host_1.CoreAsyncHost.from({
            resolveFile: file => file,
            async readFile(file) { return ""; },
            async writeFile(file, content) { }
        }));
        await grammar.check(/*sourceFile*/ undefined, cts.token);
        cts.cancel();
        try {
            await grammar.emit(/*sourceFile*/ undefined, /*writeFile*/ undefined, cts.token);
            fail("Expected grammar.emit() to throw an error.");
        }
        catch (e) {
        }
    });
});
//# sourceMappingURL=emitter.test.js.map