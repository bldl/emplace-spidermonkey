/*!
 * Copyright (c) 2020 Ron Buckton (rbuckton@chronicles.org)
 *
 * This file is licensed to you under the terms of the MIT License, found in the LICENSE file
 * in the root of this repository or package.
 */
/** {@docCategory Bind} */
export declare enum SymbolKind {
    SourceFile = 0,
    Production = 1,
    Parameter = 2
}
/** {@docCategory Bind} */
export declare class Symbol {
    id: number;
    name: string;
    kind: SymbolKind;
    parent: Symbol | undefined;
    locals: SymbolTable | undefined;
    constructor(kind: SymbolKind, name: string);
}
/** {@docCategory Bind} */
export declare class SymbolTable {
    private nameMap;
    get isEmpty(): boolean;
    resolveSymbol(name: string, kind: SymbolKind): Symbol | undefined;
    symbolsOfKind(kind: SymbolKind): Generator<Symbol, void, undefined>;
    private getSymbols;
}
