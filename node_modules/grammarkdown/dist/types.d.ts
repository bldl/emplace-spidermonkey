/*!
 * Copyright (c) 2020 Ron Buckton (rbuckton@chronicles.org)
 *
 * This file is licensed to you under the terms of the MIT License, found in the LICENSE file
 * in the root of this repository or package.
 */
/** {@docCategory Other} */
export interface TextRange {
    readonly pos: number;
    readonly end: number;
}
/** {@docCategory Other} */
export interface Position {
    readonly line: number;
    readonly character: number;
}
/** {@docCategory Other} */
export declare namespace Position {
    function create(line: number, character: number): Position;
    function clone(position: Position): Position;
    function compare(left: Position, right: Position): 0 | 1 | -1;
    function equals(left: Position, right: Position): boolean;
}
/** {@docCategory Other} */
export interface Range {
    readonly start: Position;
    readonly end: Position;
}
/** {@docCategory Other} */
export declare namespace Range {
    function create(start: Position, end: Position): Range;
    function clone(range: Range): Range;
    function collapseToStart(range: Range): Range;
    function collapseToEnd(range: Range): Range;
    function isCollapsed(range: Range): boolean;
    function contains(left: Range, right: Range): boolean;
    function containsPosition(range: Range, position: Position): boolean;
    function intersects(left: Range, right: Range): boolean;
    function equals(left: Range, right: Range): boolean;
}
